# This is a composition of lint and test scripts

name: Test and Release

# Run this job on all pushes and pull requests
# as well as tags with a semantic version
on:
    push:
        branches:
            - master
        tags:
          # normal versions
          - "v[0-9]+.[0-9]+.[0-9]+"
          # pre-releases
          - "v[0-9]+.[0-9]+.[0-9]+-**"
    pull_request: {}

jobs:
  # Performs quick checks before the expensive test runs
  check-and-lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn'

    - name: Install dependencies
      run: yarn install --frozen-lockfile

    - name: Typecheck TypeScript code
      run: yarn run check

    - name: Run linters
      run: yarn run lint

  # ===================

  # Runs unit tests on all supported node versions and OSes
  unit-tests:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        node-version: [14.x, 16.x, 18.x, 20.x]
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn'

    - name: Print versions
      run: |
        npm -v
        yarn -v

    - name: Install dependencies
      run: yarn install --frozen-lockfile

    - name: Run component tests
      run: yarn run test:ci
      env:
        CI: true

  # ===================

  # Deploys the final package to NPM and Github Actions
  deploy:
    # Trigger this step only when a commit on master is tagged with a version number
    if: |
      github.event_name == 'push' &&
      startsWith(github.ref, 'refs/tags/v')

    needs: [check-and-lint, unit-tests]

    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn'

    - name: Extract the version and commit body from the tag
      id: extract_release
      # The body may be multiline, therefore we need to escape some characters
      run: |
        VERSION="${{ github.ref }}"
        VERSION=${VERSION##*/v}
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        EOF=$(od -An -N6 -x /dev/urandom | tr -d ' ')
        BODY=$(git show -s --format=%b)
        echo "BODY<<$EOF" >> $GITHUB_OUTPUT
        echo "$BODY" >> $GITHUB_OUTPUT
        echo "$EOF" >> $GITHUB_OUTPUT

    - name: Install dependencies
      run: yarn install --frozen-lockfile

    - name: Create a clean build
      run: yarn run build

    - name: Publish package to npm
      run: |
        npm config set //registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}
        npm whoami
        npm publish

    - name: Create Github Release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        name: Release v${{ steps.extract_release.outputs.VERSION }}
        draft: false
        # Prerelease versions create prereleases on Github
        prerelease: ${{ contains(steps.extract_release.outputs.VERSION, '-') }}
        body: ${{ steps.extract_release.outputs.BODY }}
